import discord
import random
import numpy as np
import matplotlib.pyplot as plt
import imageio
import os
from discord.ext import commands

class Cark(commands.Cog):
    def __init__(self, bot):
        self.bot = bot

    @commands.command()
    async def √ßark(self, ctx, *se√ßenekler):
        if len(se√ßenekler) < 2:
            await ctx.send("‚ö†Ô∏è En az 2 se√ßenek girmelisin! √ñrnek: `!√ßark a b c d e`")
            return

        tur_sayƒ±sƒ± = 3  # Ka√ß tam tur d√∂necek
        kare_sayƒ±sƒ± = 20  # Animasyon i√ßin ka√ß kare olu≈üturulacak
        a√ßƒ±lar = np.linspace(0, 360 * tur_sayƒ±sƒ±, kare_sayƒ±sƒ±)  # D√∂nd√ºrme a√ßƒ±larƒ±
        son_a√ßƒ± = random.uniform(0, 360)  # Rastgele son durma a√ßƒ±sƒ±
        √ßark_a√ßƒ±sƒ± = a√ßƒ±lar + son_a√ßƒ±

        dosya_adƒ± = "cark_animasyon.gif"
        resimler = []
        b√∂l√ºm_sayƒ±sƒ± = len(se√ßenekler)
        b√∂l√ºm_a√ßƒ±sƒ± = 360 / b√∂l√ºm_sayƒ±sƒ±  # Her se√ßeneƒüin a√ßƒ±sƒ±
        ge√ßici_dosyalar = []  # Ge√ßici dosyalarƒ± takip etmek i√ßin liste

        # √ñzel renk dizisi (sƒ±rasƒ±yla tekrar eder)
        renkler = ["#ff4545", "#00ff99", "#006aff", "#ff4545"]
        renkler = [renkler[i % len(renkler)] for i in range(b√∂l√ºm_sayƒ±sƒ±)]  # D√∂ng√ºyle renkleri e≈üle≈ütir

        for a√ßƒ± in √ßark_a√ßƒ±sƒ±:
            fig, ax = plt.subplots(figsize=(4, 4), dpi=300)
            ax.set_facecolor("none")  # Arka plan ≈üeffaf

            # √áarkƒ± √ßiz
            wedges, _ = ax.pie(
                [1] * b√∂l√ºm_sayƒ±sƒ±,
                startangle=a√ßƒ±,
                colors=renkler,
                wedgeprops={"edgecolor": "black", "linewidth": 2}  # Kenar √ßizgileri eklendi
            )

            # Yazƒ±larƒ± ekle
            for i in range(b√∂l√ºm_sayƒ±sƒ±):
                yazƒ±_a√ßƒ±sƒ± = (b√∂l√ºm_a√ßƒ±sƒ± * i) + a√ßƒ± + (b√∂l√ºm_a√ßƒ±sƒ± / 2)
                x = 0.6 * np.cos(np.radians(yazƒ±_a√ßƒ±sƒ±))
                y = 0.6 * np.sin(np.radians(yazƒ±_a√ßƒ±sƒ±))
                ax.text(x, y, se√ßenekler[i], ha="center", va="center", fontsize=12, color="black", fontweight="bold")

            # √ústte sabit duran i≈üaret (‚ñº)
            ax.text(0, 1.1, "‚ñº", ha="center", va="center", fontsize=20, color="red", fontweight="bold")

            plt.axis("off")
            resim_adƒ± = f"frame_{int(a√ßƒ±)}.png"
            plt.savefig(resim_adƒ±, transparent=True, bbox_inches='tight', pad_inches=0.1)
            plt.close()
            ge√ßici_dosyalar.append(resim_adƒ±)  # Dosya adƒ±nƒ± listeye ekle
            resimler.append(imageio.imread(resim_adƒ±))

        # Animasyonu olu≈ütur
        imageio.mimsave(dosya_adƒ±, resimler, duration=0.05)

        # Ge√ßici dosyalarƒ± temizle
        for dosya in ge√ßici_dosyalar:
            if os.path.exists(dosya):
                os.remove(dosya)

        await ctx.send("üé° √áark d√∂n√ºyor...", file=discord.File(dosya_adƒ±))

        # √áark animasyonunu da temizle
        if os.path.exists(dosya_adƒ±):
            os.remove(dosya_adƒ±)

async def setup(bot):
    await bot.add_cog(Cark(bot))